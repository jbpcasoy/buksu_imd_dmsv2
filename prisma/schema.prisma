datasource db {
    provider  = "postgresql"
    url       = env("POSTGRES_PRISMA_URL")
    directUrl = env("POSTGRES_URL_NON_POOLING")
}

generator client {
    provider = "prisma-client-js"
}

model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? @db.Text
    access_token      String? @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? @db.Text
    session_state     String?

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id            String    @id @default(cuid())
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    accounts      Account[]
    sessions      Session[]

    isAdmin            Boolean              @default(false) // changed in auth route, not modified in database
    Faculty            Faculty[]
    IDDCoordinator     IDDCoordinator?
    CITLDirector       CITLDirector?
    Event              Event[]
    NotificationRead   NotificationRead[]
    ProfilePictureFile ProfilePictureFile[]
    FDIS               FDIS?
    VPAA               VPAA?
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

model College {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    name       String       @unique
    Department Department[]
}

model Department {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    College   College   @relation(fields: [collegeId], references: [id])
    name      String    @unique
    collegeId String
    Faculty   Faculty[]
}

model Faculty {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    User              User               @relation(fields: [userId], references: [id])
    userId            String
    Department        Department         @relation(fields: [departmentId], references: [id])
    departmentId      String
    IM                IM[]
    ActiveFaculty     ActiveFaculty?
    Chairperson       Chairperson?
    Coordinator       Coordinator?
    Dean              Dean?
    PeerReview        PeerReview[]
    ContentSpecialist ContentSpecialist?
    CoAuthor          CoAuthor[]
    Syllabus          Syllabus[]

    @@unique([departmentId, userId])
}

model ActiveFaculty {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    Faculty   Faculty @relation(fields: [facultyId], references: [id])
    facultyId String  @unique
}

enum IMType {
    MODULE
    COURSE_FILE
    WORKTEXT
    TEXTBOOK
}

model IM {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    Faculty   Faculty    @relation(fields: [facultyId], references: [id])
    facultyId String
    title     String
    type      IMType
    IMFile    IMFile[]
    Event     Event[]
    CoAuthor  CoAuthor[]
}

model IMFile {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    IM                 IM                  @relation(fields: [iMId], references: [id], onDelete: Cascade)
    iMId               String
    filename           String
    size               Int
    mimetype           String
    originalFilename   String
    DepartmentReview   DepartmentReview?
    DepartmentRevision DepartmentRevision?
    CITLRevision       CITLRevision?
    QAMISRevision      QAMISRevision?
    IMERCCITLRevision  IMERCCITLRevision?

    DepartmentReviewed                    DepartmentReviewed?                  @relation(fields: [departmentReviewedId], references: [id], onDelete: Cascade)
    departmentReviewedId                  String?                              @unique
    SubmittedReturnedDepartmentRevision   SubmittedReturnedDepartmentRevision? @relation(fields: [submittedReturnedDepartmentRevisionId], references: [id], onDelete: Cascade)
    submittedReturnedDepartmentRevisionId String?                              @unique
    SubmittedIDDCoordinatorSuggestion     SubmittedIDDCoordinatorSuggestion?   @relation(fields: [submittedIDDCoordinatorSuggestionId], references: [id], onDelete: Cascade)
    submittedIDDCoordinatorSuggestionId   String?                              @unique
    SubmittedReturnedCITLRevision         SubmittedReturnedCITLRevision?       @relation(fields: [submittedReturnedCITLRevisionId], references: [id], onDelete: Cascade)
    submittedReturnedCITLRevisionId       String?                              @unique
    SubmittedQAMISSuggestion              SubmittedQAMISSuggestion?            @relation(fields: [submittedQAMISSuggestionId], references: [id], onDelete: Cascade)
    submittedQAMISSuggestionId            String?                              @unique
    IMERCCITLReviewed                     IMERCCITLReviewed?                   @relation(fields: [iMERCCITLReviewedId], references: [id], onDelete: Cascade)
    iMERCCITLReviewedId                   String?                              @unique
    SubmittedReturnedIMERCCITLRevision    SubmittedReturnedIMERCCITLRevision?  @relation(fields: [submittedReturnedIMERCCITLRevisionId], references: [id], onDelete: Cascade)
    submittedReturnedIMERCCITLRevisionId  String?                              @unique
}

model Chairperson {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    Faculty                            Faculty                              @relation(fields: [facultyId], references: [id])
    facultyId                          String                               @unique
    ActiveChairperson                  ActiveChairperson?
    ChairpersonReview                  ChairpersonReview[]
    QAMISChairpersonEndorsement        QAMISChairpersonEndorsement[]
    SyllabusChairpersonReview          SyllabusChairpersonReview[]
    ReturnedSyllabusDepartmentRevision ReturnedSyllabusDepartmentRevision[]
    SyllabusChairpersonEndorsement     SyllabusChairpersonEndorsement[]
}

model Coordinator {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    Faculty                     Faculty                       @relation(fields: [facultyId], references: [id])
    facultyId                   String                        @unique
    ActiveCoordinator           ActiveCoordinator?
    CoordinatorReview           CoordinatorReview[]
    CoordinatorEndorsement      CoordinatorEndorsement[]
    QAMISCoordinatorEndorsement QAMISCoordinatorEndorsement[]
    ReturnedDepartmentRevision  ReturnedDepartmentRevision[]
}

model Dean {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    Faculty                 Faculty                   @relation(fields: [facultyId], references: [id])
    facultyId               String                    @unique
    ActiveDean              ActiveDean?
    DeanEndorsement         DeanEndorsement[]
    QAMISDeanEndorsement    QAMISDeanEndorsement[]
    SyllabusDeanEndorsement SyllabusDeanEndorsement[]
}

model ActiveCoordinator {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    Coordinator   Coordinator @relation(fields: [coordinatorId], references: [id])
    coordinatorId String      @unique
}

model ActiveChairperson {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    Chairperson   Chairperson @relation(fields: [chairpersonId], references: [id])
    chairpersonId String      @unique
}

model ActiveDean {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    Dean   Dean   @relation(fields: [deanId], references: [id])
    deanId String @unique
}

model DepartmentReview {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    IMFile            IMFile             @relation(fields: [iMFileId], references: [id], onDelete: Cascade)
    iMFileId          String             @unique
    PeerReview        PeerReview?
    ChairpersonReview ChairpersonReview?
    CoordinatorReview CoordinatorReview?
    Event             Event[]
}

enum Rating {
    VM
    M
    JE
    NM
    NAA
}

// ratings are optional in the database
// ratings will be validated on the api only to allow adjustments on questions
// see corresponding questions on readme file
model PeerReview {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    q1_1               Rating?
    q1_2               Rating?
    q2_1               Rating?
    q2_2               Rating?
    q2_3               Rating?
    q2_4               Rating?
    q3_1               Rating?
    q4_1               Rating?
    q4_2               Rating?
    q4_3               Rating?
    q5_1               Rating?
    q5_2               Rating?
    q5_3               Rating?
    q6_1               Rating?
    q6_2               Rating?
    q6_3               Rating?
    q6_4               Rating?
    q6_5               Rating?
    q7_1               Rating?
    q7_2               Rating?
    q7_3               Rating?
    q7_4               Rating?
    q7_5               Rating?
    q8_1               Rating?
    q8_2               Rating?
    q8_3               Rating?
    PeerSuggestion     PeerSuggestion?
    DepartmentReview   DepartmentReview @relation(fields: [departmentReviewId], references: [id], onDelete: Cascade)
    departmentReviewId String           @unique
    Faculty            Faculty          @relation(fields: [facultyId], references: [id])
    facultyId          String
}

model PeerSuggestion {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    PeerReview              PeerReview               @relation(fields: [peerReviewId], references: [id], onDelete: Cascade)
    peerReviewId            String                   @unique
    PeerSuggestionItem      PeerSuggestionItem[]
    SubmittedPeerSuggestion SubmittedPeerSuggestion?
}

model PeerSuggestionItem {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    suggestion                    String
    remarks                       String?
    PeerSuggestion                PeerSuggestion                 @relation(fields: [peerSuggestionId], references: [id], onDelete: Cascade)
    peerSuggestionId              String
    pageNumber                    Int
    PeerSuggestionItemActionTaken PeerSuggestionItemActionTaken?
}

model SubmittedPeerSuggestion {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    PeerSuggestion     PeerSuggestion      @relation(fields: [peerSuggestionId], references: [id], onDelete: Cascade)
    peerSuggestionId   String              @unique
    DepartmentReviewed DepartmentReviewed?
    Event              Event[]
}

model ChairpersonReview {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    q1_1                  Rating?
    q1_2                  Rating?
    q2_1                  Rating?
    q2_2                  Rating?
    q2_3                  Rating?
    q2_4                  Rating?
    q3_1                  Rating?
    q4_1                  Rating?
    q4_2                  Rating?
    q4_3                  Rating?
    q5_1                  Rating?
    q5_2                  Rating?
    q5_3                  Rating?
    q6_1                  Rating?
    q6_2                  Rating?
    q6_3                  Rating?
    q6_4                  Rating?
    q6_5                  Rating?
    q7_1                  Rating?
    q7_2                  Rating?
    q7_3                  Rating?
    q7_4                  Rating?
    q7_5                  Rating?
    q8_1                  Rating?
    q8_2                  Rating?
    q8_3                  Rating?
    ChairpersonSuggestion ChairpersonSuggestion?
    DepartmentReview      DepartmentReview       @relation(fields: [departmentReviewId], references: [id], onDelete: Cascade)
    departmentReviewId    String                 @unique
    Chairperson           Chairperson            @relation(fields: [chairpersonId], references: [id])
    chairpersonId         String
}

model ChairpersonSuggestion {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    ChairpersonReview              ChairpersonReview               @relation(fields: [chairpersonReviewId], references: [id], onDelete: Cascade)
    chairpersonReviewId            String                          @unique
    ChairpersonSuggestionItem      ChairpersonSuggestionItem[]
    SubmittedChairpersonSuggestion SubmittedChairpersonSuggestion?
}

model ChairpersonSuggestionItem {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    suggestion                           String
    remarks                              String?
    ChairpersonSuggestion                ChairpersonSuggestion                 @relation(fields: [chairpersonSuggestionId], references: [id], onDelete: Cascade)
    chairpersonSuggestionId              String
    pageNumber                           Int
    ChairpersonSuggestionItemActionTaken ChairpersonSuggestionItemActionTaken?
}

model SubmittedChairpersonSuggestion {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    ChairpersonSuggestion   ChairpersonSuggestion @relation(fields: [chairpersonSuggestionId], references: [id], onDelete: Cascade)
    chairpersonSuggestionId String                @unique
    DepartmentReviewed      DepartmentReviewed?
    Event                   Event[]
}

model CoordinatorReview {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    q1_1                  Rating?
    q1_2                  Rating?
    q2_1                  Rating?
    q2_2                  Rating?
    q2_3                  Rating?
    q2_4                  Rating?
    q3_1                  Rating?
    q4_1                  Rating?
    q4_2                  Rating?
    q4_3                  Rating?
    q5_1                  Rating?
    q5_2                  Rating?
    q5_3                  Rating?
    q6_1                  Rating?
    q6_2                  Rating?
    q6_3                  Rating?
    q6_4                  Rating?
    q6_5                  Rating?
    q7_1                  Rating?
    q7_2                  Rating?
    q7_3                  Rating?
    q7_4                  Rating?
    q7_5                  Rating?
    q8_1                  Rating?
    q8_2                  Rating?
    q8_3                  Rating?
    CoordinatorSuggestion CoordinatorSuggestion?
    DepartmentReview      DepartmentReview       @relation(fields: [departmentReviewId], references: [id], onDelete: Cascade)
    departmentReviewId    String                 @unique
    Coordinator           Coordinator            @relation(fields: [coordinatorId], references: [id])
    coordinatorId         String
}

model CoordinatorSuggestion {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    CoordinatorReview              CoordinatorReview               @relation(fields: [coordinatorReviewId], references: [id], onDelete: Cascade)
    coordinatorReviewId            String                          @unique
    CoordinatorSuggestionItem      CoordinatorSuggestionItem[]
    SubmittedCoordinatorSuggestion SubmittedCoordinatorSuggestion?
}

model CoordinatorSuggestionItem {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    suggestion                           String
    remarks                              String?
    CoordinatorSuggestion                CoordinatorSuggestion                 @relation(fields: [coordinatorSuggestionId], references: [id], onDelete: Cascade)
    coordinatorSuggestionId              String
    pageNumber                           Int
    CoordinatorSuggestionItemActionTaken CoordinatorSuggestionItemActionTaken?
}

model SubmittedCoordinatorSuggestion {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    CoordinatorSuggestion   CoordinatorSuggestion @relation(fields: [coordinatorSuggestionId], references: [id], onDelete: Cascade)
    coordinatorSuggestionId String                @unique
    DepartmentReviewed      DepartmentReviewed?
    Event                   Event[]
}

model DepartmentReviewed {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    SubmittedCoordinatorSuggestion   SubmittedCoordinatorSuggestion @relation(fields: [submittedCoordinatorSuggestionId], references: [id], onDelete: Cascade)
    submittedCoordinatorSuggestionId String                         @unique
    SubmittedChairpersonSuggestion   SubmittedChairpersonSuggestion @relation(fields: [submittedChairpersonSuggestionId], references: [id], onDelete: Cascade)
    submittedChairpersonSuggestionId String                         @unique
    SubmittedPeerSuggestion          SubmittedPeerSuggestion        @relation(fields: [submittedPeerSuggestionId], references: [id], onDelete: Cascade)
    submittedPeerSuggestionId        String                         @unique
    DepartmentRevision               DepartmentRevision[]
    Event                            Event[]
    IMFile                           IMFile?
}

model DepartmentRevision {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    DepartmentReviewed         DepartmentReviewed          @relation(fields: [departmentReviewedId], references: [id], onDelete: Cascade)
    departmentReviewedId       String
    IMFile                     IMFile                      @relation(fields: [iMFileId], references: [id], onDelete: Cascade)
    iMFileId                   String                      @unique
    CoordinatorEndorsement     CoordinatorEndorsement?
    Event                      Event[]
    ReturnedDepartmentRevision ReturnedDepartmentRevision?
}

model CoordinatorEndorsement {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    DepartmentRevision   DepartmentRevision @relation(fields: [departmentRevisionId], references: [id], onDelete: Cascade)
    departmentRevisionId String             @unique
    Coordinator          Coordinator        @relation(fields: [coordinatorId], references: [id])
    coordinatorId        String
    DeanEndorsement      DeanEndorsement?
    Event                Event[]
}

model DeanEndorsement {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    CoordinatorEndorsement   CoordinatorEndorsement    @relation(fields: [coordinatorEndorsementId], references: [id], onDelete: Cascade)
    coordinatorEndorsementId String                    @unique
    Dean                     Dean                      @relation(fields: [deanId], references: [id])
    deanId                   String
    IDDCoordinatorSuggestion IDDCoordinatorSuggestion?
    Event                    Event[]
}

model IDDCoordinator {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    User                           User                             @relation(fields: [userId], references: [id])
    userId                         String                           @unique
    ActiveIDDCoordinator           ActiveIDDCoordinator?
    IDDCoordinatorSuggestion       IDDCoordinatorSuggestion[]
    IDDCoordinatorEndorsement      IDDCoordinatorEndorsement[]
    IDDSpecialistReview            IDDSpecialistReview[]
    IMERCIDDCoordinatorEndorsement IMERCIDDCoordinatorEndorsement[]
    ReturnedCITLRevision           ReturnedCITLRevision[]
    ReturnedIMERCCITLRevision      ReturnedIMERCCITLRevision[]
}

model ActiveIDDCoordinator {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    IDDCoordinator   IDDCoordinator @relation(fields: [iDDCoordinatorId], references: [id])
    iDDCoordinatorId String         @unique
}

model CITLDirector {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    User                            User                              @relation(fields: [userId], references: [id])
    userId                          String                            @unique
    ActiveCITLDirector              ActiveCITLDirector?
    CITLDirectorEndorsement         CITLDirectorEndorsement[]
    ContentEditorReview             ContentEditorReview[]
    IMERCCITLDirectorEndorsement    IMERCCITLDirectorEndorsement[]
    SyllabusCITLDirectorEndorsement SyllabusCITLDirectorEndorsement[]
}

model ActiveCITLDirector {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    CITLDirector   CITLDirector @relation(fields: [cITLDirectorId], references: [id])
    cITLDirectorId String       @unique
}

model IDDCoordinatorSuggestion {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    DeanEndorsement                   DeanEndorsement                    @relation(fields: [deanEndorsementId], references: [id], onDelete: Cascade)
    deanEndorsementId                 String                             @unique
    IDDCoordinator                    IDDCoordinator                     @relation(fields: [iDDCoordinatorId], references: [id])
    iDDCoordinatorId                  String
    IDDCoordinatorSuggestionItem      IDDCoordinatorSuggestionItem[]
    SubmittedIDDCoordinatorSuggestion SubmittedIDDCoordinatorSuggestion?
}

model IDDCoordinatorSuggestionItem {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    IDDCoordinatorSuggestion                IDDCoordinatorSuggestion                 @relation(fields: [iDDCoordinatorSuggestionId], references: [id], onDelete: Cascade)
    iDDCoordinatorSuggestionId              String
    suggestion                              String
    remarks                                 String?
    pageNumber                              Int
    IDDCoordinatorSuggestionItemActionTaken IDDCoordinatorSuggestionItemActionTaken?
}

model SubmittedIDDCoordinatorSuggestion {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    IDDCoordinatorSuggestion   IDDCoordinatorSuggestion @relation(fields: [iDDCoordinatorSuggestionId], references: [id], onDelete: Cascade)
    iDDCoordinatorSuggestionId String                   @unique
    CITLRevision               CITLRevision[]
    Event                      Event[]
    IMFile                     IMFile?
}

model CITLRevision {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    SubmittedIDDCoordinatorSuggestion   SubmittedIDDCoordinatorSuggestion @relation(fields: [submittedIDDCoordinatorSuggestionId], references: [id], onDelete: Cascade)
    submittedIDDCoordinatorSuggestionId String
    IMFile                              IMFile                            @relation(fields: [iMFileId], references: [id], onDelete: Cascade)
    iMFileId                            String                            @unique
    IDDCoordinatorEndorsement           IDDCoordinatorEndorsement?
    Event                               Event[]
    ReturnedCITLRevision                ReturnedCITLRevision?
}

model IDDCoordinatorEndorsement {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    IDDCoordinator          IDDCoordinator           @relation(fields: [iDDCoordinatorId], references: [id])
    iDDCoordinatorId        String
    CITLRevision            CITLRevision             @relation(fields: [cITLRevisionId], references: [id], onDelete: Cascade)
    cITLRevisionId          String                   @unique
    CITLDirectorEndorsement CITLDirectorEndorsement?
    Event                   Event[]
}

model CITLDirectorEndorsement {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    IDDCoordinatorEndorsement   IDDCoordinatorEndorsement @relation(fields: [iDDCoordinatorEndorsementId], references: [id], onDelete: Cascade)
    iDDCoordinatorEndorsementId String                    @unique
    CITLDirector                CITLDirector              @relation(fields: [cITLDirectorId], references: [id])
    cITLDirectorId              String
    QAMISSuggestion             QAMISSuggestion?
    Event                       Event[]
}

model QAMISSuggestion {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    CITLDirectorEndorsement   CITLDirectorEndorsement   @relation(fields: [cITLDirectorEndorsementId], references: [id], onDelete: Cascade)
    cITLDirectorEndorsementId String                    @unique
    QAMISSuggestionItem       QAMISSuggestionItem[]
    SubmittedQAMISSuggestion  SubmittedQAMISSuggestion?
}

model QAMISSuggestionItem {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    QAMISSuggestion   QAMISSuggestion @relation(fields: [qAMISSuggestionId], references: [id], onDelete: Cascade)
    qAMISSuggestionId String
    suggestion        String
    actionTaken       String?
    remarks           String?
    pageNumber        Int
}

model SubmittedQAMISSuggestion {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    QAMISSuggestion   QAMISSuggestion @relation(fields: [qAMISSuggestionId], references: [id], onDelete: Cascade)
    qAMISSuggestionId String          @unique
    QAMISRevision     QAMISRevision?
    QAMISFile         QAMISFile?
    IMFile            IMFile?
}

model QAMISFile {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    filename                   String
    size                       Int
    mimetype                   String
    originalFilename           String
    SubmittedQAMISSuggestion   SubmittedQAMISSuggestion @relation(fields: [submittedQAMISSuggestionId], references: [id], onDelete: Cascade)
    submittedQAMISSuggestionId String                   @unique
    QAMISRevision              QAMISRevision?
}

model QAMISRevision {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    QAMISFile                   QAMISFile                    @relation(fields: [qAMISFileId], references: [id], onDelete: Cascade)
    qAMISFileId                 String                       @unique
    SubmittedQAMISSuggestion    SubmittedQAMISSuggestion     @relation(fields: [submittedQAMISSuggestionId], references: [id], onDelete: Cascade)
    submittedQAMISSuggestionId  String                       @unique
    IMFile                      IMFile                       @relation(fields: [iMFileId], references: [id], onDelete: Cascade)
    iMFileId                    String                       @unique
    QAMISCoordinatorEndorsement QAMISCoordinatorEndorsement?
    QAMISChairpersonEndorsement QAMISChairpersonEndorsement?
    QAMISDeanEndorsement        QAMISDeanEndorsement?
    Event                       Event[]
}

model QAMISCoordinatorEndorsement {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    QAMISRevision              QAMISRevision               @relation(fields: [qAMISRevisionId], references: [id], onDelete: Cascade)
    qAMISRevisionId            String                      @unique
    Coordinator                Coordinator                 @relation(fields: [coordinatorId], references: [id])
    coordinatorId              String
    QAMISDepartmentEndorsement QAMISDepartmentEndorsement?
    Event                      Event[]
}

model QAMISChairpersonEndorsement {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    QAMISRevision              QAMISRevision               @relation(fields: [qAMISRevisionId], references: [id], onDelete: Cascade)
    qAMISRevisionId            String                      @unique
    Chairperson                Chairperson                 @relation(fields: [chairpersonId], references: [id])
    chairpersonId              String
    QAMISDepartmentEndorsement QAMISDepartmentEndorsement?
    Event                      Event[]
}

model QAMISDeanEndorsement {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    QAMISRevision              QAMISRevision               @relation(fields: [qAMISRevisionId], references: [id], onDelete: Cascade)
    qAMISRevisionId            String                      @unique
    Dean                       Dean                        @relation(fields: [deanId], references: [id])
    deanId                     String
    QAMISDepartmentEndorsement QAMISDepartmentEndorsement?
    Event                      Event[]
}

model QAMISDepartmentEndorsement {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    QAMISDeanEndorsement          QAMISDeanEndorsement        @relation(fields: [qAMISDeanEndorsementId], references: [id], onDelete: Cascade)
    qAMISDeanEndorsementId        String                      @unique
    QAMISChairpersonEndorsement   QAMISChairpersonEndorsement @relation(fields: [qAMISChairpersonEndorsementId], references: [id], onDelete: Cascade)
    qAMISChairpersonEndorsementId String                      @unique
    QAMISCoordinatorEndorsement   QAMISCoordinatorEndorsement @relation(fields: [qAMISCoordinatorEndorsementId], references: [id], onDelete: Cascade)
    qAMISCoordinatorEndorsementId String                      @unique
    ContentSpecialistReview       ContentSpecialistReview?
    ContentEditorReview           ContentEditorReview?
    IDDSpecialistReview           IDDSpecialistReview?
    Event                         Event[]
}

model ContentSpecialistReview {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    q1_1                         Rating?
    q1_2                         Rating?
    q2_1                         Rating?
    q2_2                         Rating?
    q2_3                         Rating?
    q2_4                         Rating?
    q3_1                         Rating?
    q4_1                         Rating?
    q4_2                         Rating?
    q4_3                         Rating?
    q5_1                         Rating?
    q5_2                         Rating?
    q5_3                         Rating?
    q5_4                         Rating?
    q6_1                         Rating?
    q6_2                         Rating?
    q6_3                         Rating?
    q6_4                         Rating?
    q6_5                         Rating?
    q7_1                         Rating?
    q7_2                         Rating?
    q7_3                         Rating?
    q7_4                         Rating?
    q7_5                         Rating?
    q8_1                         Rating?
    q8_2                         Rating?
    q8_3                         Rating?
    QAMISDepartmentEndorsement   QAMISDepartmentEndorsement   @relation(fields: [qAMISDepartmentEndorsementId], references: [id], onDelete: Cascade)
    qAMISDepartmentEndorsementId String                       @unique
    ContentSpecialistSuggestion  ContentSpecialistSuggestion?
    ContentSpecialist            ContentSpecialist            @relation(fields: [contentSpecialistId], references: [id])
    contentSpecialistId          String
}

model ContentSpecialistSuggestion {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    ContentSpecialistReview              ContentSpecialistReview               @relation(fields: [contentSpecialistReviewId], references: [id], onDelete: Cascade)
    contentSpecialistReviewId            String                                @unique
    ContentSpecialistSuggestionItem      ContentSpecialistSuggestionItem[]
    SubmittedContentSpecialistSuggestion SubmittedContentSpecialistSuggestion?
}

model ContentSpecialistSuggestionItem {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    ContentSpecialistSuggestion                ContentSpecialistSuggestion                 @relation(fields: [contentSpecialistSuggestionId], references: [id], onDelete: Cascade)
    contentSpecialistSuggestionId              String
    suggestion                                 String
    remarks                                    String?
    pageNumber                                 Int
    ContentSpecialistSuggestionItemActionTaken ContentSpecialistSuggestionItemActionTaken?
}

model SubmittedContentSpecialistSuggestion {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    ContentSpecialistSuggestion   ContentSpecialistSuggestion @relation(fields: [contentSpecialistSuggestionId], references: [id], onDelete: Cascade)
    contentSpecialistSuggestionId String                      @unique
    IMERCCITLReviewed             IMERCCITLReviewed?
    Event                         Event[]
}

model ContentEditorReview {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    q1_1                         Rating?
    q1_2                         Rating?
    q2_1                         Rating?
    q2_2                         Rating?
    q2_3                         Rating?
    q2_4                         Rating?
    q3_1                         Rating?
    q4_1                         Rating?
    q4_2                         Rating?
    q4_3                         Rating?
    q5_1                         Rating?
    q5_2                         Rating?
    q5_3                         Rating?
    q5_4                         Rating?
    q6_1                         Rating?
    q6_2                         Rating?
    q6_3                         Rating?
    q6_4                         Rating?
    q6_5                         Rating?
    q7_1                         Rating?
    q7_2                         Rating?
    q7_3                         Rating?
    q7_4                         Rating?
    q7_5                         Rating?
    q8_1                         Rating?
    q8_2                         Rating?
    q8_3                         Rating?
    CITLDirector                 CITLDirector               @relation(fields: [cITLDirectorId], references: [id])
    cITLDirectorId               String
    QAMISDepartmentEndorsement   QAMISDepartmentEndorsement @relation(fields: [qAMISDepartmentEndorsementId], references: [id], onDelete: Cascade)
    qAMISDepartmentEndorsementId String                     @unique
    ContentEditorSuggestion      ContentEditorSuggestion?
}

model ContentEditorSuggestion {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    ContentEditorReview              ContentEditorReview               @relation(fields: [contentEditorReviewId], references: [id], onDelete: Cascade)
    contentEditorReviewId            String                            @unique
    ContentEditorSuggestionItem      ContentEditorSuggestionItem[]
    SubmittedContentEditorSuggestion SubmittedContentEditorSuggestion?
}

model ContentEditorSuggestionItem {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    ContentEditorSuggestion                ContentEditorSuggestion                 @relation(fields: [contentEditorSuggestionId], references: [id], onDelete: Cascade)
    contentEditorSuggestionId              String
    suggestion                             String
    remarks                                String?
    pageNumber                             Int
    ContentEditorSuggestionItemActionTaken ContentEditorSuggestionItemActionTaken?
}

model SubmittedContentEditorSuggestion {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    ContentEditorSuggestion   ContentEditorSuggestion @relation(fields: [contentEditorSuggestionId], references: [id], onDelete: Cascade)
    contentEditorSuggestionId String                  @unique
    IMERCCITLReviewed         IMERCCITLReviewed?
    Event                     Event[]
}

model IDDSpecialistReview {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    q1_1                         Rating?
    q1_2                         Rating?
    q2_1                         Rating?
    q2_2                         Rating?
    q2_3                         Rating?
    q2_4                         Rating?
    q3_1                         Rating?
    q4_1                         Rating?
    q4_2                         Rating?
    q4_3                         Rating?
    q5_1                         Rating?
    q5_2                         Rating?
    q5_3                         Rating?
    q5_4                         Rating?
    q6_1                         Rating?
    q6_2                         Rating?
    q6_3                         Rating?
    q6_4                         Rating?
    q6_5                         Rating?
    q7_1                         Rating?
    q7_2                         Rating?
    q7_3                         Rating?
    q7_4                         Rating?
    q7_5                         Rating?
    q8_1                         Rating?
    q8_2                         Rating?
    q8_3                         Rating?
    IDDCoordinator               IDDCoordinator             @relation(fields: [iDDCoordinatorId], references: [id])
    iDDCoordinatorId             String
    QAMISDepartmentEndorsement   QAMISDepartmentEndorsement @relation(fields: [qAMISDepartmentEndorsementId], references: [id], onDelete: Cascade)
    qAMISDepartmentEndorsementId String                     @unique
    IDDSpecialistSuggestion      IDDSpecialistSuggestion?
}

model IDDSpecialistSuggestion {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    IDDSpecialistReview              IDDSpecialistReview               @relation(fields: [iDDSpecialistReviewId], references: [id], onDelete: Cascade)
    iDDSpecialistReviewId            String                            @unique
    SubmittedIDDSpecialistSuggestion SubmittedIDDSpecialistSuggestion?
    IDDSpecialistSuggestionItem      IDDSpecialistSuggestionItem[]
}

model IDDSpecialistSuggestionItem {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    IDDSpecialistSuggestion                IDDSpecialistSuggestion                 @relation(fields: [iDDSpecialistSuggestionId], references: [id], onDelete: Cascade)
    iDDSpecialistSuggestionId              String
    suggestion                             String
    remarks                                String?
    pageNumber                             Int
    IDDSpecialistSuggestionItemActionTaken IDDSpecialistSuggestionItemActionTaken?
}

model SubmittedIDDSpecialistSuggestion {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    IDDSpecialistSuggestion   IDDSpecialistSuggestion @relation(fields: [iDDSpecialistSuggestionId], references: [id], onDelete: Cascade)
    iDDSpecialistSuggestionId String                  @unique
    IMERCCITLReviewed         IMERCCITLReviewed?
    Event                     Event[]
}

model IMERCCITLReviewed {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    SubmittedIDDSpecialistSuggestion       SubmittedIDDSpecialistSuggestion     @relation(fields: [submittedIDDSpecialistSuggestionId], references: [id], onDelete: Cascade)
    submittedIDDSpecialistSuggestionId     String                               @unique
    SubmittedContentEditorSuggestion       SubmittedContentEditorSuggestion     @relation(fields: [submittedContentEditorSuggestionId], references: [id], onDelete: Cascade)
    submittedContentEditorSuggestionId     String                               @unique
    SubmittedContentSpecialistSuggestion   SubmittedContentSpecialistSuggestion @relation(fields: [submittedContentSpecialistSuggestionId], references: [id], onDelete: Cascade)
    submittedContentSpecialistSuggestionId String                               @unique
    IMERCCITLRevision                      IMERCCITLRevision[]
    Event                                  Event[]
    IMFile                                 IMFile?
    PlagiarismFile                         PlagiarismFile?
}

model IMERCCITLRevision {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    PlagiarismFile                 PlagiarismFile                  @relation(fields: [plagiarismFileId], references: [id], onDelete: Cascade)
    plagiarismFileId               String
    IMERCCITLReviewed              IMERCCITLReviewed               @relation(fields: [iMERCCITLReviewedId], references: [id], onDelete: Cascade)
    iMERCCITLReviewedId            String
    IMFile                         IMFile                          @relation(fields: [iMFileId], references: [id], onDelete: Cascade)
    iMFileId                       String                          @unique
    IMERCIDDCoordinatorEndorsement IMERCIDDCoordinatorEndorsement?
    Event                          Event[]
    ReturnedIMERCCITLRevision      ReturnedIMERCCITLRevision?
}

model IMERCIDDCoordinatorEndorsement {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    IDDCoordinator               IDDCoordinator                @relation(fields: [iDDCoordinatorId], references: [id])
    iDDCoordinatorId             String
    IMERCCITLRevision            IMERCCITLRevision             @relation(fields: [iMERCCITLRevisionId], references: [id], onDelete: Cascade)
    iMERCCITLRevisionId          String                        @unique
    IMERCCITLDirectorEndorsement IMERCCITLDirectorEndorsement?
    Event                        Event[]
}

model IMERCCITLDirectorEndorsement {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    CITLDirector                     CITLDirector                   @relation(fields: [cITLDirectorId], references: [id])
    cITLDirectorId                   String
    IMERCIDDCoordinatorEndorsement   IMERCIDDCoordinatorEndorsement @relation(fields: [iMERCIDDCoordinatorEndorsementId], references: [id], onDelete: Cascade)
    iMERCIDDCoordinatorEndorsementId String                         @unique
    Event                            Event[]
    SerialNumber                     SerialNumber?
}

model ContentSpecialist {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    Faculty                 Faculty                   @relation(fields: [facultyId], references: [id])
    facultyId               String                    @unique
    ActiveContentSpecialist ActiveContentSpecialist?
    ContentSpecialistReview ContentSpecialistReview[]
}

model ActiveContentSpecialist {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    ContentSpecialist   ContentSpecialist @relation(fields: [contentSpecialistId], references: [id])
    contentSpecialistId String            @unique
}

enum EventType {
    IM_CREATED
    DEPARTMENT_REVIEW_CREATED
    SUBMITTED_PEER_SUGGESTION_CREATED
    SUBMITTED_COORDINATOR_SUGGESTION_CREATED
    SUBMITTED_CHAIRPERSON_SUGGESTION_CREATED
    DEPARTMENT_REVIEWED_CREATED
    DEPARTMENT_REVISION_CREATED
    COORDINATOR_ENDORSEMENT_CREATED
    DEAN_ENDORSEMENT_CREATED
    SUBMITTED_IDD_COORDINATOR_SUGGESTION_CREATED
    CITL_REVISION_CREATED
    IDD_COORDINATOR_ENDORSEMENT_CREATED
    CITL_DIRECTOR_ENDORSEMENT_CREATED
    QAMIS_REVISION_CREATED
    QAMIS_COORDINATOR_ENDORSEMENT_CREATED
    QAMIS_CHAIRPERSON_ENDORSEMENT_CREATED
    QAMIS_DEAN_ENDORSEMENT_CREATED
    QAMIS_DEPARTMENT_ENDORSEMENT_CREATED
    SUBMITTED_CONTENT_SPECIALIST_SUGGESTION_CREATED
    SUBMITTED_IDD_SPECIALIST_SUGGESTION_CREATED
    SUBMITTED_CONTENT_EDITOR_SUGGESTION_CREATED
    IMERC_CITL_REVIEWED_CREATED
    IMERC_CITL_REVISION_CREATED
    IMERC_IDD_COORDINATOR_ENDORSEMENT_CREATED
    IMERC_CITL_DIRECTOR_ENDORSEMENT_CREATED
    SUBMITTED_RETURNED_DEPARTMENT_REVISION_CREATED
    SUBMITTED_RETURNED_CITL_REVISION_CREATED
    SUBMITTED_RETURNED_IMERC_CITL_REVISION_CREATED
}

model Event {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    message                                String? // Tobe updated when returning request
    url                                    String? // Tobe updated when returning request
    User                                   User                                  @relation(fields: [userId], references: [id], onDelete: Cascade)
    userId                                 String
    type                                   EventType
    IM                                     IM?                                   @relation(fields: [iMId], references: [id], onDelete: Cascade)
    iMId                                   String?
    DepartmentReview                       DepartmentReview?                     @relation(fields: [departmentReviewId], references: [id], onDelete: Cascade)
    departmentReviewId                     String?
    SubmittedPeerSuggestion                SubmittedPeerSuggestion?              @relation(fields: [submittedPeerSuggestionId], references: [id], onDelete: Cascade)
    submittedPeerSuggestionId              String?
    SubmittedCoordinatorSuggestion         SubmittedCoordinatorSuggestion?       @relation(fields: [submittedCoordinatorSuggestionId], references: [id], onDelete: Cascade)
    submittedCoordinatorSuggestionId       String?
    SubmittedChairpersonSuggestion         SubmittedChairpersonSuggestion?       @relation(fields: [submittedChairpersonSuggestionId], references: [id], onDelete: Cascade)
    submittedChairpersonSuggestionId       String?
    DepartmentReviewed                     DepartmentReviewed?                   @relation(fields: [departmentReviewedId], references: [id], onDelete: Cascade)
    departmentReviewedId                   String?
    DepartmentRevision                     DepartmentRevision?                   @relation(fields: [departmentRevisionId], references: [id], onDelete: Cascade)
    departmentRevisionId                   String?
    CoordinatorEndorsement                 CoordinatorEndorsement?               @relation(fields: [coordinatorEndorsementId], references: [id], onDelete: Cascade)
    coordinatorEndorsementId               String?
    DeanEndorsement                        DeanEndorsement?                      @relation(fields: [deanEndorsementId], references: [id], onDelete: Cascade)
    deanEndorsementId                      String?
    SubmittedIDDCoordinatorSuggestion      SubmittedIDDCoordinatorSuggestion?    @relation(fields: [submittedIDDCoordinatorSuggestionId], references: [id], onDelete: Cascade)
    submittedIDDCoordinatorSuggestionId    String?
    CITLRevision                           CITLRevision?                         @relation(fields: [cITLRevisionId], references: [id], onDelete: Cascade)
    cITLRevisionId                         String?
    IDDCoordinatorEndorsement              IDDCoordinatorEndorsement?            @relation(fields: [iDDCoordinatorEndorsementId], references: [id], onDelete: Cascade)
    iDDCoordinatorEndorsementId            String?
    CITLDirectorEndorsement                CITLDirectorEndorsement?              @relation(fields: [cITLDirectorEndorsementId], references: [id], onDelete: Cascade)
    cITLDirectorEndorsementId              String?
    QAMISRevision                          QAMISRevision?                        @relation(fields: [qAMISRevisionId], references: [id], onDelete: Cascade)
    qAMISRevisionId                        String?
    QAMISCoordinatorEndorsement            QAMISCoordinatorEndorsement?          @relation(fields: [qAMISCoordinatorEndorsementId], references: [id], onDelete: Cascade)
    qAMISCoordinatorEndorsementId          String?
    QAMISChairpersonEndorsement            QAMISChairpersonEndorsement?          @relation(fields: [qAMISChairpersonEndorsementId], references: [id], onDelete: Cascade)
    qAMISChairpersonEndorsementId          String?
    QAMISDeanEndorsement                   QAMISDeanEndorsement?                 @relation(fields: [qAMISDeanEndorsementId], references: [id], onDelete: Cascade)
    qAMISDeanEndorsementId                 String?
    QAMISDepartmentEndorsement             QAMISDepartmentEndorsement?           @relation(fields: [qAMISDepartmentEndorsementId], references: [id], onDelete: Cascade)
    qAMISDepartmentEndorsementId           String?
    SubmittedContentSpecialistSuggestion   SubmittedContentSpecialistSuggestion? @relation(fields: [submittedContentSpecialistSuggestionId], references: [id], onDelete: Cascade)
    submittedContentSpecialistSuggestionId String?
    SubmittedContentEditorSuggestion       SubmittedContentEditorSuggestion?     @relation(fields: [submittedContentEditorSuggestionId], references: [id], onDelete: Cascade)
    submittedContentEditorSuggestionId     String?
    SubmittedIDDSpecialistSuggestion       SubmittedIDDSpecialistSuggestion?     @relation(fields: [submittedIDDSpecialistSuggestionId], references: [id], onDelete: Cascade)
    submittedIDDSpecialistSuggestionId     String?
    IMERCCITLReviewed                      IMERCCITLReviewed?                    @relation(fields: [iMERCCITLReviewedId], references: [id], onDelete: Cascade)
    iMERCCITLReviewedId                    String?
    IMERCCITLRevision                      IMERCCITLRevision?                    @relation(fields: [iMERCCITLRevisionId], references: [id], onDelete: Cascade)
    iMERCCITLRevisionId                    String?
    IMERCIDDCoordinatorEndorsement         IMERCIDDCoordinatorEndorsement?       @relation(fields: [iMERCIDDCoordinatorEndorsementId], references: [id], onDelete: Cascade)
    iMERCIDDCoordinatorEndorsementId       String?
    IMERCCITLDirectorEndorsement           IMERCCITLDirectorEndorsement?         @relation(fields: [iMERCCITLDirectorEndorsementId], references: [id], onDelete: Cascade)
    iMERCCITLDirectorEndorsementId         String?
    SubmittedReturnedDepartmentRevision    SubmittedReturnedDepartmentRevision?  @relation(fields: [submittedReturnedDepartmentRevisionId], references: [id], onDelete: Cascade)
    submittedReturnedDepartmentRevisionId  String?
    SubmittedReturnedCITLRevision          SubmittedReturnedCITLRevision?        @relation(fields: [submittedReturnedCITLRevisionId], references: [id], onDelete: Cascade)
    submittedReturnedCITLRevisionId        String?
    SubmittedReturnedIMERCCITLRevision     SubmittedReturnedIMERCCITLRevision?   @relation(fields: [submittedReturnedIMERCCITLRevisionId], references: [id], onDelete: Cascade)
    submittedReturnedIMERCCITLRevisionId   String?
    NotificationRead                       NotificationRead[]
}

model NotificationRead {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    User    User   @relation(fields: [userId], references: [id])
    userId  String
    Event   Event  @relation(fields: [eventId], references: [id], onDelete: Cascade)
    eventId String
}

model ProfilePictureFile {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    User             User   @relation(fields: [userId], references: [id])
    userId           String
    filename         String
    size             Int
    mimetype         String
    originalFilename String
}

model PlagiarismFile {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    filename            String
    size                Int
    mimetype            String
    originalFilename    String
    IMERCCITLRevision   IMERCCITLRevision[]
    IMERCCITLReviewed   IMERCCITLReviewed   @relation(fields: [iMERCCITLReviewedId], references: [id], onDelete: Cascade)
    iMERCCITLReviewedId String              @unique
}

model Announcement {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    title       String
    description String?
    url         String?
}

model ReturnedDepartmentRevision {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    DepartmentRevision                       DepartmentRevision                         @relation(fields: [departmentRevisionId], references: [id], onDelete: Cascade)
    departmentRevisionId                     String                                     @unique
    ReturnedDepartmentRevisionSuggestionItem ReturnedDepartmentRevisionSuggestionItem[]
    SubmittedReturnedDepartmentRevision      SubmittedReturnedDepartmentRevision?
    Coordinator                              Coordinator                                @relation(fields: [coordinatorId], references: [id])
    coordinatorId                            String
}

model ReturnedDepartmentRevisionSuggestionItem {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    ReturnedDepartmentRevision                          ReturnedDepartmentRevision                           @relation(fields: [returnedDepartmentRevisionId], references: [id], onDelete: Cascade)
    returnedDepartmentRevisionId                        String
    suggestion                                          String
    remarks                                             String?
    pageNumber                                          Int
    ReturnedDepartmentRevisionSuggestionItemActionTaken ReturnedDepartmentRevisionSuggestionItemActionTaken?
}

model SubmittedReturnedDepartmentRevision {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    ReturnedDepartmentRevision   ReturnedDepartmentRevision @relation(fields: [returnedDepartmentRevisionId], references: [id], onDelete: Cascade)
    returnedDepartmentRevisionId String                     @unique
    Event                        Event[]
    IMFile                       IMFile?
}

model ReturnedCITLRevision {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    CITLRevision                       CITLRevision                         @relation(fields: [cITLRevisionId], references: [id], onDelete: Cascade)
    cITLRevisionId                     String                               @unique
    ReturnedCITLRevisionSuggestionItem ReturnedCITLRevisionSuggestionItem[]
    SubmittedReturnedCITLRevision      SubmittedReturnedCITLRevision?
    IDDCoordinator                     IDDCoordinator                       @relation(fields: [iDDCoordinatorId], references: [id])
    iDDCoordinatorId                   String
}

model ReturnedCITLRevisionSuggestionItem {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    ReturnedCITLRevision                          ReturnedCITLRevision                           @relation(fields: [returnedCITLRevisionId], references: [id], onDelete: Cascade)
    returnedCITLRevisionId                        String
    suggestion                                    String
    remarks                                       String?
    pageNumber                                    Int
    ReturnedCITLRevisionSuggestionItemActionTaken ReturnedCITLRevisionSuggestionItemActionTaken?
}

model SubmittedReturnedCITLRevision {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    ReturnedCITLRevision   ReturnedCITLRevision @relation(fields: [returnedCITLRevisionId], references: [id], onDelete: Cascade)
    returnedCITLRevisionId String               @unique
    Event                  Event[]
    IMFile                 IMFile?
}

model ReturnedIMERCCITLRevision {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    IMERCCITLRevision                       IMERCCITLRevision                         @relation(fields: [iMERCCITLRevisionId], references: [id], onDelete: Cascade)
    iMERCCITLRevisionId                     String                                    @unique
    IDDCoordinator                          IDDCoordinator                            @relation(fields: [iDDCoordinatorId], references: [id])
    iDDCoordinatorId                        String
    ReturnedIMERCCITLRevisionSuggestionItem ReturnedIMERCCITLRevisionSuggestionItem[]
    SubmittedReturnedIMERCCITLRevision      SubmittedReturnedIMERCCITLRevision?
}

model ReturnedIMERCCITLRevisionSuggestionItem {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    ReturnedIMERCCITLRevision                          ReturnedIMERCCITLRevision                           @relation(fields: [returnedIMERCCITLRevisionId], references: [id], onDelete: Cascade)
    returnedIMERCCITLRevisionId                        String
    suggestion                                         String
    remarks                                            String?
    pageNumber                                         Int
    ReturnedIMERCCITLRevisionSuggestionItemActionTaken ReturnedIMERCCITLRevisionSuggestionItemActionTaken?
}

model SubmittedReturnedIMERCCITLRevision {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    ReturnedIMERCCITLRevision   ReturnedIMERCCITLRevision @relation(fields: [returnedIMERCCITLRevisionId], references: [id], onDelete: Cascade)
    returnedIMERCCITLRevisionId String                    @unique
    Event                       Event[]
    IMFile                      IMFile?
}

model PeerSuggestionItemActionTaken {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    PeerSuggestionItem   PeerSuggestionItem @relation(fields: [peerSuggestionItemId], references: [id], onDelete: Cascade)
    peerSuggestionItemId String             @unique
    value                String
}

model ChairpersonSuggestionItemActionTaken {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    ChairpersonSuggestionItem   ChairpersonSuggestionItem @relation(fields: [chairpersonSuggestionItemId], references: [id], onDelete: Cascade)
    chairpersonSuggestionItemId String                    @unique
    value                       String
}

model CoordinatorSuggestionItemActionTaken {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    CoordinatorSuggestionItem   CoordinatorSuggestionItem @relation(fields: [coordinatorSuggestionItemId], references: [id], onDelete: Cascade)
    coordinatorSuggestionItemId String                    @unique
    value                       String
}

model ReturnedDepartmentRevisionSuggestionItemActionTaken {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    ReturnedDepartmentRevisionSuggestionItem   ReturnedDepartmentRevisionSuggestionItem @relation(fields: [returnedDepartmentRevisionSuggestionItemId], references: [id], onDelete: Cascade)
    returnedDepartmentRevisionSuggestionItemId String                                   @unique
    value                                      String
}

model IDDCoordinatorSuggestionItemActionTaken {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    IDDCoordinatorSuggestionItem   IDDCoordinatorSuggestionItem @relation(fields: [iDDCoordinatorSuggestionItemId], references: [id], onDelete: Cascade)
    iDDCoordinatorSuggestionItemId String                       @unique
    value                          String
}

model ReturnedCITLRevisionSuggestionItemActionTaken {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    ReturnedCITLRevisionSuggestionItem   ReturnedCITLRevisionSuggestionItem @relation(fields: [returnedCITLRevisionSuggestionItemId], references: [id], onDelete: Cascade)
    returnedCITLRevisionSuggestionItemId String                             @unique
    value                                String
}

model ContentSpecialistSuggestionItemActionTaken {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    ContentSpecialistSuggestionItem   ContentSpecialistSuggestionItem @relation(fields: [contentSpecialistSuggestionItemId], references: [id], onDelete: Cascade)
    contentSpecialistSuggestionItemId String                          @unique
    value                             String
}

model ContentEditorSuggestionItemActionTaken {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    ContentEditorSuggestionItem   ContentEditorSuggestionItem @relation(fields: [contentEditorSuggestionItemId], references: [id], onDelete: Cascade)
    contentEditorSuggestionItemId String                      @unique
    value                         String
}

model IDDSpecialistSuggestionItemActionTaken {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    IDDSpecialistSuggestionItem   IDDSpecialistSuggestionItem @relation(fields: [iDDSpecialistSuggestionItemId], references: [id], onDelete: Cascade)
    iDDSpecialistSuggestionItemId String                      @unique
    value                         String
}

model ReturnedIMERCCITLRevisionSuggestionItemActionTaken {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    ReturnedIMERCCITLRevisionSuggestionItem   ReturnedIMERCCITLRevisionSuggestionItem @relation(fields: [returnedIMERCCITLRevisionSuggestionItemId], references: [id], onDelete: Cascade)
    returnedIMERCCITLRevisionSuggestionItemId String                                  @unique
    value                                     String
}

model SerialNumber {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    value                          String                       @unique
    IMERCCITLDirectorEndorsement   IMERCCITLDirectorEndorsement @relation(fields: [iMERCCITLDirectorEndorsementId], references: [id], onDelete: Cascade)
    iMERCCITLDirectorEndorsementId String                       @unique
}

model CoAuthor {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    IM        IM      @relation(fields: [iMId], references: [id], onDelete: Cascade)
    iMId      String
    Faculty   Faculty @relation(fields: [facultyId], references: [id])
    facultyId String

    @@unique([facultyId, iMId])
}

model Syllabus {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    Faculty      Faculty        @relation(fields: [facultyId], references: [id])
    facultyId    String
    SyllabusFile SyllabusFile[]
    courseCode   String
    courseTitle  String

    //TODO: add co-author
}

model SyllabusFile {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    Syllabus                   Syllabus                    @relation(fields: [syllabusId], references: [id])
    syllabusId                 String
    filename                   String
    size                       Int
    mimetype                   String
    originalFilename           String
    SyllabusDepartmentReview   SyllabusDepartmentReview?
    SyllabusDepartmentRevision SyllabusDepartmentRevision?
    SyllabusCITLRevision       SyllabusCITLRevision?

    SubmittedSyllabusChairpersonSuggestion        SubmittedSyllabusChairpersonSuggestion?      @relation(fields: [submittedSyllabusChairpersonSuggestionId], references: [id])
    submittedSyllabusChairpersonSuggestionId      String?                                      @unique
    SubmittedReturnedSyllabusDepartmentRevision   SubmittedReturnedSyllabusDepartmentRevision? @relation(fields: [submittedReturnedSyllabusDepartmentRevisionId], references: [id])
    submittedReturnedSyllabusDepartmentRevisionId String?                                      @unique
    SubmittedSyllabusFDISSuggestion               SubmittedSyllabusFDISSuggestion?             @relation(fields: [submittedSyllabusFDISSuggestionId], references: [id])
    submittedSyllabusFDISSuggestionId             String?                                      @unique
    SubmittedReturnedSyllabusCITLRevision         SubmittedReturnedSyllabusCITLRevision?       @relation(fields: [submittedReturnedSyllabusCITLRevisionId], references: [id])
    submittedReturnedSyllabusCITLRevisionId       String?                                      @unique
    SubmittedReturnedSyllabusVPAARevision         SubmittedReturnedSyllabusVPAARevision?       @relation(fields: [submittedReturnedSyllabusVPAARevisionId], references: [id])
    submittedReturnedSyllabusVPAARevisionId       String?                                      @unique
}

model SyllabusDepartmentReview {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    SyllabusFile              SyllabusFile               @relation(fields: [syllabusFileId], references: [id])
    syllabusFileId            String                     @unique
    SyllabusChairpersonReview SyllabusChairpersonReview?
}

enum SyllabusRating {
    YES
    NO
}

model SyllabusChairpersonReview {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    Chairperson                Chairperson              @relation(fields: [chairpersonId], references: [id])
    chairpersonId              String
    SyllabusDepartmentReview   SyllabusDepartmentReview @relation(fields: [syllabusDepartmentReviewId], references: [id])
    syllabusDepartmentReviewId String                   @unique

    q1_1 SyllabusRating?
    q1_2 SyllabusRating?
    q1_3 SyllabusRating?
    q2_1 SyllabusRating?
    q2_2 SyllabusRating?
    q2_3 SyllabusRating?
    q2_4 SyllabusRating?
    q2_5 SyllabusRating?
    q2_6 SyllabusRating?
    q3_1 SyllabusRating?
    q3_2 SyllabusRating?
    q3_3 SyllabusRating?
    q3_4 SyllabusRating?
    q3_5 SyllabusRating?
    q4_1 SyllabusRating?
    q4_2 SyllabusRating?
    q4_3 SyllabusRating?
    q4_4 SyllabusRating?
    q5_1 SyllabusRating?
    q5_2 SyllabusRating?
    q5_3 SyllabusRating?
    q5_4 SyllabusRating?
    q5_5 SyllabusRating?
    q6_1 SyllabusRating?
    q6_2 SyllabusRating?
    q6_3 SyllabusRating?
    q6_4 SyllabusRating?
    q6_5 SyllabusRating?
    q6_6 SyllabusRating?
    q7_1 SyllabusRating?
    q7_2 SyllabusRating?
    q7_3 SyllabusRating?
    q7_4 SyllabusRating?
    q8_1 SyllabusRating?
    q8_2 SyllabusRating?
    q8_3 SyllabusRating?
    q8_4 SyllabusRating?
    q8_5 SyllabusRating?
    q8_6 SyllabusRating?
}

model SyllabusChairpersonSuggestion {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    SyllabusChairpersonSuggestionItem      SyllabusChairpersonSuggestionItem[]
    SubmittedSyllabusChairpersonSuggestion SubmittedSyllabusChairpersonSuggestion?
}

model SyllabusChairpersonSuggestionItem {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    SyllabusChairpersonSuggestion                SyllabusChairpersonSuggestion                 @relation(fields: [syllabusChairpersonSuggestionId], references: [id])
    syllabusChairpersonSuggestionId              String
    suggestion                                   String
    remarks                                      String?
    pageNumber                                   Int
    SyllabusChairpersonSuggestionItemActionTaken SyllabusChairpersonSuggestionItemActionTaken?
}

model SyllabusChairpersonSuggestionItemActionTaken {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    SyllabusChairpersonSuggestionItem   SyllabusChairpersonSuggestionItem @relation(fields: [syllabusChairpersonSuggestionItemId], references: [id])
    syllabusChairpersonSuggestionItemId String                            @unique
    value                               String
}

model SubmittedSyllabusChairpersonSuggestion {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    SyllabusChairpersonSuggestion   SyllabusChairpersonSuggestion @relation(fields: [syllabusChairpersonSuggestionId], references: [id])
    syllabusChairpersonSuggestionId String                        @unique
    SyllabusDepartmentRevision      SyllabusDepartmentRevision[]
    SyllabusFile                    SyllabusFile?
}

model SyllabusDepartmentRevision {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    SubmittedSyllabusChairpersonSuggestion   SubmittedSyllabusChairpersonSuggestion @relation(fields: [submittedSyllabusChairpersonSuggestionId], references: [id])
    submittedSyllabusChairpersonSuggestionId String
    SyllabusFile                             SyllabusFile                           @relation(fields: [syllabusFileId], references: [id])
    syllabusFileId                           String                                 @unique
    SyllabusChairpersonEndorsement           SyllabusChairpersonEndorsement?
    ReturnedSyllabusDepartmentRevision       ReturnedSyllabusDepartmentRevision?
}

model ReturnedSyllabusDepartmentRevision {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    SyllabusDepartmentRevision                       SyllabusDepartmentRevision                         @relation(fields: [syllabusDepartmentRevisionId], references: [id])
    syllabusDepartmentRevisionId                     String                                             @unique
    Chairperson                                      Chairperson                                        @relation(fields: [chairpersonId], references: [id])
    chairpersonId                                    String
    SubmittedReturnedSyllabusDepartmentRevision      SubmittedReturnedSyllabusDepartmentRevision?
    ReturnedSyllabusDepartmentRevisionSuggestionItem ReturnedSyllabusDepartmentRevisionSuggestionItem[]
}

model ReturnedSyllabusDepartmentRevisionSuggestionItem {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    suggestion                                                  String
    remarks                                                     String?
    pageNumber                                                  Int
    ReturnedSyllabusDepartmentRevisionSuggestionItemActionTaken ReturnedSyllabusDepartmentRevisionSuggestionItemActionTaken?
    ReturnedSyllabusDepartmentRevision                          ReturnedSyllabusDepartmentRevision                           @relation(fields: [returnedSyllabusDepartmentRevisionId], references: [id])
    returnedSyllabusDepartmentRevisionId                        String
}

model ReturnedSyllabusDepartmentRevisionSuggestionItemActionTaken {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    ReturnedSyllabusDepartmentRevisionSuggestionItem   ReturnedSyllabusDepartmentRevisionSuggestionItem @relation(fields: [returnedSyllabusDepartmentRevisionSuggestionItemId], references: [id])
    returnedSyllabusDepartmentRevisionSuggestionItemId String                                           @unique
    value                                              String
}

model SubmittedReturnedSyllabusDepartmentRevision {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    ReturnedSyllabusDepartmentRevision   ReturnedSyllabusDepartmentRevision @relation(fields: [returnedSyllabusDepartmentRevisionId], references: [id])
    returnedSyllabusDepartmentRevisionId String                             @unique
    SyllabusFile                         SyllabusFile?
}

model SyllabusChairpersonEndorsement {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    Chairperson                  Chairperson                @relation(fields: [chairpersonId], references: [id])
    chairpersonId                String
    SyllabusDepartmentRevision   SyllabusDepartmentRevision @relation(fields: [syllabusDepartmentRevisionId], references: [id])
    syllabusDepartmentRevisionId String                     @unique
    SyllabusDeanEndorsement      SyllabusDeanEndorsement?
}

model SyllabusDeanEndorsement {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    Dean                             Dean                           @relation(fields: [deanId], references: [id])
    deanId                           String
    SyllabusChairpersonEndorsement   SyllabusChairpersonEndorsement @relation(fields: [syllabusChairpersonEndorsementId], references: [id])
    syllabusChairpersonEndorsementId String                         @unique
    SyllabusFDISSuggestion           SyllabusFDISSuggestion?
}

model FDIS {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    User                         User                           @relation(fields: [userId], references: [id])
    userId                       String                         @unique
    ActiveFDIS                   ActiveFDIS?
    SyllabusFDISSuggestion       SyllabusFDISSuggestion[]
    ReturnedSyllabusCITLRevision ReturnedSyllabusCITLRevision[]
    SyllabusFDISEndorsement      SyllabusFDISEndorsement[]
}

model ActiveFDIS {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    FDIS   FDIS   @relation(fields: [fDISId], references: [id])
    fDISId String @unique
}

model SyllabusFDISSuggestion {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    SyllabusDeanEndorsement         SyllabusDeanEndorsement          @relation(fields: [syllabusDeanEndorsementId], references: [id])
    syllabusDeanEndorsementId       String                           @unique
    FDIS                            FDIS                             @relation(fields: [fDISId], references: [id])
    fDISId                          String
    SyllabusFDISSuggestionItem      SyllabusFDISSuggestionItem[]
    SubmittedSyllabusFDISSuggestion SubmittedSyllabusFDISSuggestion?
}

model SyllabusFDISSuggestionItem {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    suggestion                            String
    remarks                               String?
    pageNumber                            Int
    SyllabusFDISSuggestion                SyllabusFDISSuggestion                 @relation(fields: [syllabusFDISSuggestionId], references: [id])
    syllabusFDISSuggestionId              String
    SyllabusFDISSuggestionItemActionTaken SyllabusFDISSuggestionItemActionTaken?
}

model SyllabusFDISSuggestionItemActionTaken {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    value                        String
    SyllabusFDISSuggestionItem   SyllabusFDISSuggestionItem @relation(fields: [syllabusFDISSuggestionItemId], references: [id])
    syllabusFDISSuggestionItemId String                     @unique
}

model SubmittedSyllabusFDISSuggestion {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    SyllabusFDISSuggestion   SyllabusFDISSuggestion @relation(fields: [syllabusFDISSuggestionId], references: [id])
    syllabusFDISSuggestionId String                 @unique
    SyllabusCITLRevision     SyllabusCITLRevision?
    SyllabusFile             SyllabusFile?
}

model SyllabusCITLRevision {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    SubmittedSyllabusFDISSuggestion   SubmittedSyllabusFDISSuggestion @relation(fields: [submittedSyllabusFDISSuggestionId], references: [id])
    submittedSyllabusFDISSuggestionId String                          @unique
    SyllabusFile                      SyllabusFile                    @relation(fields: [syllabusFileId], references: [id])
    syllabusFileId                    String                          @unique
    ReturnedSyllabusCITLRevision      ReturnedSyllabusCITLRevision?
    SyllabusFDISEndorsement           SyllabusFDISEndorsement?
    SyllabusVPAAEndorsement           SyllabusVPAAEndorsement?
}

model ReturnedSyllabusCITLRevision {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    FDIS                                       FDIS                                         @relation(fields: [fDISId], references: [id])
    fDISId                                     String
    SyllabusCITLRevision                       SyllabusCITLRevision                         @relation(fields: [syllabusCITLRevisionId], references: [id])
    syllabusCITLRevisionId                     String                                       @unique
    ReturnedSyllabusCITLRevisionSuggestionItem ReturnedSyllabusCITLRevisionSuggestionItem[]
    SubmittedReturnedSyllabusCITLRevision      SubmittedReturnedSyllabusCITLRevision?
}

model ReturnedSyllabusCITLRevisionSuggestionItem {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    ReturnedSyllabusCITLRevision                          ReturnedSyllabusCITLRevision                           @relation(fields: [returnedSyllabusCITLRevisionId], references: [id])
    returnedSyllabusCITLRevisionId                        String
    suggestion                                            String
    remarks                                               String?
    pageNumber                                            Int
    ReturnedSyllabusCITLRevisionSuggestionItemActionTaken ReturnedSyllabusCITLRevisionSuggestionItemActionTaken?
}

model ReturnedSyllabusCITLRevisionSuggestionItemActionTaken {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    value                                        String
    ReturnedSyllabusCITLRevisionSuggestionItem   ReturnedSyllabusCITLRevisionSuggestionItem @relation(fields: [returnedSyllabusCITLRevisionSuggestionItemId], references: [id])
    returnedSyllabusCITLRevisionSuggestionItemId String                                     @unique
}

model SubmittedReturnedSyllabusCITLRevision {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    ReturnedSyllabusCITLRevision   ReturnedSyllabusCITLRevision @relation(fields: [returnedSyllabusCITLRevisionId], references: [id])
    returnedSyllabusCITLRevisionId String                       @unique
    SyllabusFile                   SyllabusFile?
}

model SyllabusFDISEndorsement {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    FDIS                            FDIS                             @relation(fields: [fDISId], references: [id])
    fDISId                          String
    SyllabusCITLRevision            SyllabusCITLRevision             @relation(fields: [syllabusCITLRevisionId], references: [id])
    syllabusCITLRevisionId          String                           @unique
    SyllabusCITLDirectorEndorsement SyllabusCITLDirectorEndorsement?
}

model SyllabusCITLDirectorEndorsement {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    CITLDirector                 CITLDirector                  @relation(fields: [cITLDirectorId], references: [id])
    cITLDirectorId               String
    SyllabusFDISEndorsement      SyllabusFDISEndorsement       @relation(fields: [syllabusFDISEndorsementId], references: [id])
    syllabusFDISEndorsementId    String                        @unique
    ReturnedSyllabusVPAARevision ReturnedSyllabusVPAARevision?
}

model VPAA {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    User                         User                           @relation(fields: [userId], references: [id])
    userId                       String                         @unique
    ActiveVPAA                   ActiveVPAA?
    ReturnedSyllabusVPAARevision ReturnedSyllabusVPAARevision[]
    SyllabusVPAAEndorsement      SyllabusVPAAEndorsement[]
}

model ActiveVPAA {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    VPAA   VPAA   @relation(fields: [vPAAId], references: [id])
    vPAAId String @unique
}

model ReturnedSyllabusVPAARevision {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    SyllabusCITLDirectorEndorsement            SyllabusCITLDirectorEndorsement              @relation(fields: [syllabusCITLDirectorEndorsementId], references: [id])
    syllabusCITLDirectorEndorsementId          String                                       @unique
    VPAA                                       VPAA                                         @relation(fields: [vPAAId], references: [id])
    vPAAId                                     String
    ReturnedSyllabusVPAARevisionSuggestionItem ReturnedSyllabusVPAARevisionSuggestionItem[]
    SubmittedReturnedSyllabusVPAARevision      SubmittedReturnedSyllabusVPAARevision?
}

model ReturnedSyllabusVPAARevisionSuggestionItem {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    suggestion                                            String
    remarks                                               String?
    pageNumber                                            Int
    ReturnedSyllabusVPAARevision                          ReturnedSyllabusVPAARevision                           @relation(fields: [returnedSyllabusVPAARevisionId], references: [id])
    returnedSyllabusVPAARevisionId                        String
    ReturnedSyllabusVPAARevisionSuggestionItemActionTaken ReturnedSyllabusVPAARevisionSuggestionItemActionTaken?
}

model ReturnedSyllabusVPAARevisionSuggestionItemActionTaken {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    value                                        String
    ReturnedSyllabusVPAARevisionSuggestionItem   ReturnedSyllabusVPAARevisionSuggestionItem @relation(fields: [returnedSyllabusVPAARevisionSuggestionItemId], references: [id])
    returnedSyllabusVPAARevisionSuggestionItemId String                                     @unique
}

model SubmittedReturnedSyllabusVPAARevision {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    ReturnedSyllabusVPAARevision   ReturnedSyllabusVPAARevision @relation(fields: [returnedSyllabusVPAARevisionId], references: [id])
    returnedSyllabusVPAARevisionId String                       @unique
    SyllabusFile                   SyllabusFile?
}

model SyllabusVPAAEndorsement {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    VPAA                   VPAA                 @relation(fields: [vPAAId], references: [id])
    vPAAId                 String
    SyllabusCITLRevision   SyllabusCITLRevision @relation(fields: [syllabusCITLRevisionId], references: [id])
    syllabusCITLRevisionId String               @unique
}
